/* ========================================
   CSS CUSTOM PROPERTIES (VARIABLES)
   ======================================== */
/*
   A more modern, cohesive, and app-like design system.
   - Uses a refined color palette with a primary accent and a range of neutrals.
   - Implements a modern font stack.
   - Defines subtle, layered box shadows for depth.
*/
:root {
    /* Brand & Accent Colors */
    --color-primary: #f59e0b;
    /* amber-500 */
    --color-primary-light: #fcd34d;
    /* amber-300 */
    --color-primary-dark: #b45309;
    /* amber-700 */
    --color-primary-text: #ffffff;

    /* Neutral/Greyscale Palette */
    --color-text-dark: #171717;
    /* neutral-900 */
    --color-text-medium: #525252;
    /* neutral-600 */
    --color-text-light: #a3a3a3;
    /* neutral-400 */
    --color-text-white: #ffffff;

    --color-background: #ffffff;
    --color-background-alt: #f5f5f5;
    /* neutral-100 */

    --color-border: #e5e5e5;
    /* neutral-200 */
    --color-border-light: #f5f5f5;
    /* neutral-100 */

    /* Semantic Colors for UI states */
    --color-success: #10b981;
    /* emerald-500 */
    --color-error: #ef4444;
    /* red-500 */
    --color-info: #3b82f6;
    /* blue-500 */
    --color-violet: #8b5cf6;
    /* violet-500 */
    --color-emerald: #10b981;
    /* emerald-500 */
    --color-amber: #f59e0b;
    /* amber-500 */

    /* Typography */
    --font-family-sans: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    --font-size-xs: 0.8rem;
    --font-size-sm: 0.9rem;
    --font-size-base: 1rem;
    --font-size-md: 1.1rem;
    --font-size-lg: 1.25rem;
    --font-size-xl: 1.5rem;
    --font-size-xxl: 2rem;
    --font-size-xxxl: 2.5rem;

    --line-height-base: 1.6;
    --line-height-heading: 1.4;

    /* Spacing */
    --space-xs: 8px;
    --space-sm: 12px;
    --space-md: 20px;
    --space-lg: 28px;
    --space-xl: 36px;
    --space-xxl: 48px;

    /* Borders & Shadows */
    --border-radius-sm: 8px;
    --border-radius-md: 12px;
    --border-radius-lg: 16px;
    --box-shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --box-shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    --box-shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
    --box-shadow-focus: 0 0 0 3px rgba(245, 158, 11, 0.3);

    /* Transitions */
    --transition-fast: all 0.2s ease;
    --transition-medium: all 0.3s ease;
}

html,
body {
    padding: 0;
    margin: 0;
    font-family: var(--font-family-sans);
    scroll-behavior: smooth;
    font-size: 15px;
    background: var(--color-background);
    color: var(--color-text-medium);
}

a {
    color: inherit;
    text-decoration: none;
}

* {
    box-sizing: border-box;
}

/* Base Typography */
body {
    font-family: var(--font-family-sans);
    background: var(--color-background);
    color: var(--color-text-medium);
    font-size: 1rem;
    line-height: var(--line-height-base);
}



/* Default: Desktop and larger screens (â‰¥700px) */
h1,
h2,
h3,
h4,
h5,
h6 {
    color: var(--color-text-dark);
    font-weight: 700;
    letter-spacing: -0.02em;
    margin-bottom: 14px;
    line-height: var(--line-height-heading);
}

h1 {
    font-size: var(--font-size-xxxl);
}

h2 {
    font-size: var(--font-size-xxl);
}

h3 {
    font-size: var(--font-size-xl);
}

h4 {
    font-size: var(--font-size-lg);
}

h5 {
    font-size: var(--font-size-md);
}

h6 {
    font-size: var(--font-size-base);
    font-weight: 600;
}

@media (max-width: 700px) {
    h1 {
        font-size: 1.35rem;
    }

    h2 {
        font-size: 1.2rem;
    }

    h3 {
        font-size: 1.1rem;
    }

    h4 {
        font-size: 1rem;
    }

    h5 {
        font-size: 0.9rem;
    }

    h6 {
        font-size: 0.8rem;
    }
}

p {
    line-height: 1.7;
    /* Slightly more than base for readability */
    text-align: justify;
}

/* ========================================
   LAYOUT AND CONTAINER STYLES
   ======================================== */

/* Base container styles */
.container {
    max-width: 1100px;
    margin: 0 auto;
    padding: var(--space-md);
}

/* Grid system */
.row {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-lg);
}

.col-md-3 {
    flex: 0 0 25%;
    max-width: 25%;
}

.col-md-5 {
    flex: 0 0 41.67%;
    max-width: 41.67%;
    /* padding is no longer needed for gutters */
}

.col-md-7 {
    flex: 0 0 58.33%;
    max-width: 58.33%;
    /* padding is no longer needed for gutters */
}

.col-md-12 {
    flex: 0 0 100%;
    max-width: 100%;
    /* padding is no longer needed for gutters */
}

/* Card components */
.card {
    background: var(--color-background);
    border-radius: var(--border-radius-md);
    box-shadow: var(--box-shadow-sm);
    border: 1px solid var(--color-border);
    margin-bottom: var(--space-lg);
    transition: var(--transition-fast);
    overflow: hidden;
}

.card:hover {
    transform: translateY(-2px);
    box-shadow: var(--box-shadow-md);
}

.card-image {
    width: 100%;
    height: 180px;
    background-size: fir;
    background-position: center top;
    border-radius: 12px 12px 0 0;
}

.card-content {
    padding: var(--space-md);
}

.card-title {
    font-weight: 700;
    color: var(--color-text-dark);
    margin-bottom: var(--space-xs);
    font-size: 1.1rem;
}

.card-text {
    margin: 0;
    color: var(--color-text-medium);
    font-size: 0.95rem;
    line-height: var(--line-height-base);
}

.breadcrumb-container {
    margin: 0 auto 20px;
    padding: 10px 40px;
    background: var(--color-background);
    box-shadow: var(--box-shadow-sm);
}

.breadcrumb {
    font-size: 0.95rem;
    margin-bottom: 18px;
    color: var(--color-text-dark);
    background: var(--color-background-alt);
    border-radius: 6px;
    padding: 10px 18px;
    display: inline-block;
}

.breadcrumb-link {
    color: var(--color-text-dark);
    text-decoration: none;
    font-weight: 600;
}

.breadcrumb-link:hover {
    text-decoration: underline;
}

.card-image {
    width: 100%;
    height: 180px;
    background-size: fir;
    background-position: center top;
    border-radius: 12px 12px 0 0;
}

.card-content {
    padding: var(--space-md);
}

.card-title {
    font-weight: 700;
    color: var(--color-text-dark);
    margin-bottom: var(--space-xs);
    font-size: 1.1rem;
}

.card-text {
    margin: 0;
    color: var(--color-text-medium);
    font-size: 0.95rem;
    line-height: var(--line-height-base);
}

footer {
    background: var(--color-background-alt);
    color: var(--color-text-dark);
    padding: var(--space-xxl) 0 0 0;
}

footer .row {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: flex-start;
}

footer .col-lg-6 {
    flex: 0 0 48%;
    max-width: 48%;
}

.footer-text {
    font-size: 0.98rem;
    color: var(--color-text-dark);
    padding-bottom: 18px;
}

.footer-img {
    height: 45px;
    width: 45px;
    margin-right: 12px;
    border-radius: 10px;
    object-fit: cover;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
    background: var(--color-background);
}

.footer-qr {
    height: 430px;
    width: 300px;
    margin-right: 12px;
    border-radius: 10px;
    object-fit: cover;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
    background: var(--color-background);
    background-image: url('/images/razorpay_qr.jpg');
    background-size: cover;
    background-repeat: no-repeat;
}

footer p {
    color: var(--color-text-medium);
    font-size: 0.98rem;
    margin-bottom: 4px;
}

.footer-social {
    list-style: none;
    padding: 0;
    display: flex;
    gap: var(--space-sm);
    margin-top: 10px;
}

.footer-social li a {
    color: var(--color-primary-dark);
    font-size: 1.5rem;
    text-decoration: none;
    background: var(--color-background);
    border-radius: 50%;
    padding: 8px;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-medium);
}

.footer-social li a:hover {
    background: var(--color-primary);
    color: var(--color-background);
    transform: translateY(-2px);
}

.footer-col,
.footer-col-right {
    display: flex;
    flex-direction: column;
    align-items: start;
    gap: 34px;
    padding-left: 20px;
}

.footer-col-right {
    justify-content: flex-end;
    padding-right: 20px;
}

.footer-title {
    color: var(--color-primary-dark);
    font-size: 1.1rem;
    margin: 0 0 6px 0;
    font-weight: 700;
    text-transform: uppercase;
    line-height: 1.3;
}

.footer-content {
    margin: 8px 0 0 0;
    text-align: left;
}

.footer-bottom-col {
    min-width: 160px;
    margin-bottom: 8px;
    padding: 0 20px;
}

.footer-bottom-col p {
    font-weight: 600;
    margin: 0 0 4px 0;
}

.footer-bottom-col a {
    color: var(--color-primary-dark);
    text-decoration: none;
    margin: 0 5px;
}

.footer-link {
    color: var(--color-primary-dark);
    text-decoration: none;
}

.footer-bottom-col a:hover {
    text-decoration: underline;
}

.footer-social {
    margin: 0;
}

.footer-bottom-separator {
    margin-top: 30px;
    margin-bottom: 20px;
}

.bottom-footer {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: 18px;
    text-align: left;
}

@media (max-width: 1000px) {
    .full-width.two-column {
        grid-template-columns: 1fr;
    }
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    font-size: 0.95rem;
    font-weight: 600;
    margin-bottom: 8px;
    color: var(--color-text-dark);
}

.form-group input,
.form-group textarea,
.form-group select {
    padding: var(--space-sm);
    border: 1px solid var(--color-border);
    border-radius: 8px;
    font-size: 1rem;
    transition: var(--transition-medium);
    background-color: var(--color-background);
    color: var(--color-text-dark);
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
    border-color: var(--color-primary);
    outline: none;
    box-shadow: var(--box-shadow-focus);
}

.form-group small {
    display: block;
    margin-top: 6px;
    font-size: 0.85rem;
    color: var(--color-text-light);
}

.form-row {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

.form-group.half {
    flex: 1;
    min-width: 200px;
}

.form-group.checkbox {
    display: flex;
    align-items: center;
    gap: 10px;
}

.form-group.checkbox input {
    width: auto;
    margin: 0;
}

.form-group.checkbox label {
    margin: 0;
}

.form-action {
    margin-top: 32px;
    text-align: center;
}

@media (max-width: 1000px) {
    .col-md-3 {
        flex: 0 0 50%;
        max-width: 50%;
    }

    .col-md-5 {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .col-md-7 {
        flex: 0 0 100%;
        max-width: 100%;
    }
}

@media (max-width: 700px) {
    .container {
        padding: 18px 6px;
    }

    .footer-img {
        height: 28px;
        width: 28px;
    }

    .footer-text {
        font-size: 0.95rem;
    }

    .bottom-footer {
        flex-direction: column;
        align-items: flex-start;
    }

    footer .row {
        flex-direction: column-reverse;
    }

    footer .col-lg-6 {
        max-width: 100%;
        flex: 0 0 100%;
    }
}

@media (max-width: 500px) {

    .col-md-3 {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .footer-img {
        height: 24px;
        width: 24px;
    }
}

/* ========================================
   SIMULATION LAYOUT COMPONENTS
   ======================================== */

/* New Responsive Simulation Layout */
.sim-layout-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    /* Mobile-first: single column */
    gap: var(--space-md);
    width: 100%;
}

.sim-main-content {
    min-width: 0;
    /* Prevents overflow in grid/flex items */
}

.sim-sidebar {
    display: contents;
    /* Flattens the structure, so children are direct grid items */
}

/* Desktop layout: two columns */
@media (min-width: 900px) {
    .sim-layout-wrapper {
        grid-template-columns: 2fr 1fr;
        /* 2/3 for canvas, 1/3 for controls */
        gap: var(--space-lg);
        align-items: start;
        /* Align items to the top */
    }

    .sim-sidebar {
        display: flex;
        flex-direction: column;
        gap: var(--space-md);
        position: sticky;
        top: var(--space-md);
    }

    /* Reset margins for items inside the sidebar */
    .sim-sidebar>.sim-controls-container,
    .sim-sidebar>.sim-results-container {
        margin-bottom: 0;
        margin-top: 0;
    }

    .sim-sidebar--fullscreen {
        /* On larger screens, the floating panel is on the bottom-right */
        bottom: var(--space-lg);
        left: auto;
        right: var(--space-lg);
        width: 380px;
        max-height: 80vh;
        padding: var(--space-md);
    }
}

/* Fullscreen Mode Styles */
.sim-layout-wrapper--fullscreen {
    /* When fullscreen, it becomes a simple block container to position children absolutely */
    display: block;
    position: relative;
    background: var(--color-background-alt);
    padding: 0;
    overflow: hidden;
}

.sim-layout-wrapper--fullscreen .sim-canvas-container {
    height: 100%;
    width: 100%;
    border-radius: 0;
    border: none;
    margin: 0;
}

.sim-layout-wrapper--fullscreen .sim-canvas-container canvas {
    height: 100% !important;
    width: 100% !important;
}

.sim-sidebar--fullscreen {
    position: absolute;
    bottom: var(--space-md);
    right: var(--space-md);
    z-index: 10;
    background: rgba(12, 10, 9, 0.8);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--border-radius-lg);
    padding: var(--space-sm);
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
}

.sim-layout-wrapper--fullscreen .sim-sidebar {
    /* Override sticky positioning when in fullscreen */
    position: absolute;
    top: auto;
}

/* Main containers for different sections of a simulation */
.sim-canvas-container {
    width: 100%;
    background-color: var(--color-background-alt);
    border-radius: var(--border-radius-lg);
    overflow: hidden;
    border: 1px solid var(--color-border);
    margin-bottom: 1.5rem;
    position: relative;
    /* For positioning the fullscreen button */
}

.sim-controls-container {
    background-color: var(--color-background-alt);
    padding: 1rem;
    border-radius: var(--border-radius-lg);
    margin-bottom: 1.5rem;
    display: grid;
    gap: 1.5rem;
    align-items: center;
}

.sim-results-container {
    margin-top: 1.5rem;
    width: 100%;
    background-color: var(--color-background-alt);
    padding: 1.5rem;
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--color-border);
}

.sim-info-text {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
    text-align: center;
    margin-top: var(--space-sm);
}

.sim-fullscreen-button {
    position: absolute;
    top: var(--space-sm);
    right: var(--space-sm);
    background: rgba(0, 0, 0, 0.3);
    color: white;
    border: none;
    border-radius: var(--border-radius-sm);
    padding: var(--space-xs);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-fast);
    opacity: 0.6;
}

/* Generic elements for controls and results */
.sim-slider-group {
    display: flex;
    flex-direction: column;
}

.sim-slider-group label {
    font-size: var(--font-size-sm);
    font-weight: 600;
    color: var(--color-text-medium);
    margin-bottom: 0.5rem;
}

.sim-slider-group input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 8px;
    background: var(--color-border);
    border-radius: 5px;
    outline: none;
}

.sim-slider-group input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    background: var(--color-primary);
    cursor: pointer;
    border-radius: 50%;
}

.sim-slider-group input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: var(--color-primary);
    cursor: pointer;
    border-radius: 50%;
    border: none;
}

.sim-button {
    padding: 0.75rem 1.5rem;
    font-size: var(--font-size-md);
    font-weight: 700;
    text-decoration: none;
    border-radius: var(--border-radius-md);
    transition: all 0.2s ease;
    background-color: var(--color-primary);
    color: var(--color-primary-text);
    border: none;
    cursor: pointer;
}

.sim-button:hover {
    background-color: var(--color-primary-dark);
    transform: translateY(-1px);
}

.sim-button:disabled {
    background-color: var(--color-text-light);
    cursor: not-allowed;
}

.sim-results-row {
    display: flex;
    justify-content: space-around;
    align-items: center;
    text-align: center;
}

.sim-results-label {
    font-size: var(--font-size-sm);
    color: var(--color-text-medium);
    margin: 0;
}

.sim-results-value {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
}

.sim-results-operator {
    font-size: 2.25rem;
    font-weight: 300;
    color: var(--color-text-light);
}

.sim-theorem-summary {
    text-align: center;
    margin-top: 1rem;
    font-weight: 600;
    font-size: var(--font-size-lg);
    letter-spacing: 0.05em;
}

.sim-results-separator {
    border-top: 1px solid var(--color-border);
    margin-top: 1rem;
    margin-bottom: 1rem;
}

/* Color utility classes (already somewhat generic, but good to keep here) */
.text-amber {
    color: var(--color-amber);
}

.text-violet {
    color: var(--color-violet);
}

.text-emerald {
    color: var(--color-emerald);
}

.text-emerald-dark {
    color: var(--color-success);
}

.text-amber-dark {
    color: #d97706;
}

.sim-info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
}

.sim-info-grid--3-col {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: auto auto;
    gap: 0.5rem 1rem;
    text-align: center;
    margin-bottom: 1.5rem;
    align-items: center;
}

.sim-grid-label {
    font-size: var(--font-size-md);
    font-weight: 600;
    color: var(--color-text-medium);
}

/* Generic value display, can be used inside grids or stand-alone */
.sim-value {
    font-size: 1.25rem;
    font-weight: 700;
    padding: 0.25rem;
    border-radius: var(--border-radius-sm);
}

/* For displaying equations like aÂ² + bÂ² = cÂ² */
.sim-equation-summary {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.75rem;
    font-size: 1.5rem;
    font-weight: 700;
    padding: 1rem;
    background-color: var(--color-background-alt);
    border-radius: var(--border-radius-md);
    margin-top: 1rem;
}

.sim-equation-operator {
    font-weight: 300;
    color: var(--color-text-light);
}

.text-blue {
    color: var(--color-info);
}

.sim-info-item {
    background-color: var(--color-background-alt);
    padding: 1rem;
    border-radius: var(--border-radius-md);
    text-align: center;
    border: 1px solid var(--color-border);
}

.sim-info-label {
    display: block;
    font-size: var(--font-size-sm);
    color: var(--color-text-medium);
    margin-bottom: 0.25rem;
}

.sim-info-value {
    display: block;
    font-size: var(--font-size-xl);
    font-weight: 700;
    color: var(--color-text-dark);
}

@media (max-width: 768px) {
    .sim-controls-container {
        grid-template-columns: 1fr;
        gap: 1rem;
    }
}

.sim-fullscreen-button:hover {
    background: rgba(0, 0, 0, 0.6);
    opacity: 1;
}

/* New Homepage Simulation Grid */
.simulationGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: var(--space-md);
}

.simulationCard {
    background-color: var(--color-background-alt);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-lg);
    padding: var(--space-md);
    display: flex;
    align-items: flex-start;
    gap: var(--space-md);
    text-decoration: none;
    color: inherit;
    transition: var(--transition-medium);
    box-shadow: var(--box-shadow-sm);
}

.simulationCard:hover {
    transform: translateY(-4px);
    box-shadow: var(--box-shadow-md);
    border-color: var(--color-primary-light);
}

.simulationCardIcon {
    font-size: 2.5rem;
    line-height: 1;
    flex-shrink: 0;
    margin-top: 4px;
}

.simulationCardContent {
    display: flex;
    flex-direction: column;
}

.simulationCardTitle {
    font-size: var(--font-size-md);
    font-weight: 700;
    color: var(--color-text-dark);
    margin: 0 0 var(--space-xs) 0;
}

.simulationCardDesc {
    font-size: var(--font-size-sm);
    color: var(--color-text-medium);
    margin: 0;
    line-height: 1.5;
    text-align: left;
}

/* Custom select styling */
.sim-select {
    width: 100%;
    padding: var(--space-sm);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-base);
    background-color: var(--color-background-alt);
    color: var(--color-text-dark);
    -webkit-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
}

/* Custom zoom slider for canvas */
.sim-zoom-slider {
    position: absolute;
    top: 50%;
    right: 20px;
    width: 150px;
    height: 20px;
    transform: translateY(-50%) rotate(-90deg);
    transform-origin: center;
    -webkit-appearance: none;
    appearance: none;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
    outline: none;
    padding: 5px;
}

.sim-zoom-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 24px;
    height: 24px;
    background: var(--color-primary);
    cursor: ns-resize;
    border-radius: 50%;
    border: 2px solid var(--color-background-alt);
}

.sim-zoom-slider::-moz-range-thumb {
    width: 24px;
    height: 24px;
    background: var(--color-primary);
    cursor: ns-resize;
    border-radius: 50%;
    border: 2px solid var(--color-background-alt);
}

/* Custom toggle switch */
.sim-toggle-switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

.sim-toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.sim-toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color-border);
    transition: .4s;
    border-radius: 34px;
}

.sim-toggle-slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked+.sim-toggle-slider {
    background-color: var(--color-primary);
}

input:checked+.sim-toggle-slider:before {
    transform: translateX(26px);
}